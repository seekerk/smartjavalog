plugins {
  id "com.github.kt3k.coveralls" version "2.8.2"
  id 'jacoco'
  id "org.sonarqube" version "2.6"
}

apply plugin: "java"
apply plugin: "application"
apply plugin: 'maven'

group 'com.github.seekerk'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

mainClassName = "org.fruct.oss.smartjavalog.Main"

jar {
    manifest.attributes("Main-Class": mainClassName);
}

task fatJar(type: Jar) {
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

task runFatJar(type: JavaExec) {
    dependsOn fatJar
    classpath = fatJar.outputs.files
    main = mainClassName
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/com.hp.hpl.jena/jena
    //compile group: 'com.hp.hpl.jena', name: 'jena', version: '2.6.4'

    compile 'net.sourceforge.owlapi:owlapi-distribution:5.1.4'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.24'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    //compile group: 'commons-io', name: 'commons-io', version: '2.5'
    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
    // https://mvnrepository.com/artifact/org.antlr/ST4
    compile group: 'org.antlr', name: 'ST4', version: '4.0.7'

    testCompile(
            'org.junit.jupiter:junit-jupiter-api:5.1.0'
    )
    testRuntime(
            'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    )
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

// To specify a license in the pom:
install {
  repositories.mavenInstaller {
    pom.project {
      licenses {
        license {
          name 'The Apache Software License, Version 2.0'
          url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          distribution 'repo'
        }
      }
    }
  }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

test {
    useJUnitPlatform()
}

tasks.coveralls {
  dependsOn 'check'
}
